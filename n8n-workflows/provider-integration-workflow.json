{
  "name": "Personal Health Assistant - Healthcare Provider Integration",
  "version": 1,
  "createdAt": "2025-01-27T00:00:00.000Z",
  "updatedAt": "2025-01-27T00:00:00.000Z",
  "active": true,
  "tags": ["healthcare", "provider-integration", "fhir", "ehr", "interoperability"],
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "provider-integration",
        "authentication": "headerAuth",
        "options": {
          "rawBody": true,
          "cors": {
            "enabled": true,
            "allowedOrigins": "https://health-assistant.dextechlabs.com"
          }
        }
      },
      "id": "fhir-integration-webhook",
      "name": "FHIR Integration Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "mode": "expression",
        "output": "={{ $json.body.requestType }}",
        "rules": {
          "patient_sync": 0,
          "provider_notification": 1,
          "appointment_request": 2,
          "care_plan_update": 3,
          "medication_reconciliation": 4
        }
      },
      "id": "request-type-router",
      "name": "Request Type Classification",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "const integrationRequest = $json.body;\nconst patientData = integrationRequest.patientData;\nconst clinicalData = integrationRequest.clinicalData;\n\n// Create FHIR Patient Resource\nconst fhirPatient = {\n  resourceType: \"Patient\",\n  id: patientData.identifiers.internalId,\n  identifier: [\n    {\n      use: \"usual\",\n      type: {\n        coding: [\n          {\n            system: \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n            code: \"MR\",\n            display: \"Medical Record Number\"\n          }\n        ]\n      },\n      system: \"https://health-assistant.dextechlabs.com/patient-id\",\n      value: patientData.identifiers.mrn || patientData.identifiers.internalId\n    }\n  ],\n  active: true,\n  name: [\n    {\n      use: \"official\",\n      family: patientData.demographics.lastName,\n      given: [patientData.demographics.firstName]\n    }\n  ],\n  telecom: [\n    {\n      system: \"phone\",\n      value: patientData.demographics.phone,\n      use: \"home\"\n    }\n  ],\n  gender: patientData.demographics.gender.toLowerCase(),\n  birthDate: patientData.demographics.dateOfBirth\n};\n\n// Add email if provided\nif (patientData.demographics.email) {\n  fhirPatient.telecom.push({\n    system: \"email\",\n    value: patientData.demographics.email,\n    use: \"home\"\n  });\n}\n\n// Add address if provided\nif (patientData.demographics.address) {\n  fhirPatient.address = [\n    {\n      use: \"home\",\n      type: \"both\",\n      line: [patientData.demographics.address.street],\n      city: patientData.demographics.address.city,\n      state: patientData.demographics.address.state,\n      postalCode: patientData.demographics.address.zipCode,\n      country: patientData.demographics.address.country || \"US\"\n    }\n  ];\n}\n\n// Create FHIR Encounter Resource\nconst fhirEncounter = {\n  resourceType: \"Encounter\",\n  id: `encounter-${integrationRequest.requestId}`,\n  status: \"finished\",\n  class: {\n    system: \"http://terminology.hl7.org/CodeSystem/v3-ActCode\",\n    code: \"VR\",\n    display: \"virtual\"\n  },\n  type: [\n    {\n      coding: [\n        {\n          system: \"http://snomed.info/sct\",\n          code: \"185317003\",\n          display: \"Telephone consultation\"\n        }\n      ]\n    }\n  ],\n  subject: {\n    reference: `Patient/${patientData.identifiers.internalId}`\n  },\n  period: {\n    start: integrationRequest.timestamp,\n    end: new Date().toISOString()\n  },\n  reasonCode: [\n    {\n      text: clinicalData.currentAssessment.chiefComplaint\n    }\n  ]\n};\n\n// Create FHIR Observation Resources for symptoms and assessments\nconst fhirObservations = [];\n\nif (clinicalData.currentAssessment.severity) {\n  fhirObservations.push({\n    resourceType: \"Observation\",\n    id: `pain-severity-${integrationRequest.requestId}`,\n    status: \"final\",\n    category: [\n      {\n        coding: [\n          {\n            system: \"http://terminology.hl7.org/CodeSystem/observation-category\",\n            code: \"survey\",\n            display: \"Survey\"\n          }\n        ]\n      }\n    ],\n    code: {\n      coding: [\n        {\n          system: \"http://loinc.org\",\n          code: \"72133-2\",\n          display: \"Pain severity - 0-10 verbal numeric rating\"\n        }\n      ]\n    },\n    subject: {\n      reference: `Patient/${patientData.identifiers.internalId}`\n    },\n    encounter: {\n      reference: `Encounter/encounter-${integrationRequest.requestId}`\n    },\n    effectiveDateTime: integrationRequest.timestamp,\n    valueInteger: clinicalData.currentAssessment.severity\n  });\n}\n\n// Create FHIR Condition Resources\nconst fhirConditions = clinicalData.conditions?.map((condition, index) => ({\n  resourceType: \"Condition\",\n  id: `condition-${integrationRequest.requestId}-${index}`,\n  clinicalStatus: {\n    coding: [\n      {\n        system: \"http://terminology.hl7.org/CodeSystem/condition-clinical\",\n        code: condition.clinicalStatus || \"active\",\n        display: condition.clinicalStatus || \"Active\"\n      }\n    ]\n  },\n  verificationStatus: {\n    coding: [\n      {\n        system: \"http://terminology.hl7.org/CodeSystem/condition-ver-status\",\n        code: condition.verificationStatus || \"confirmed\",\n        display: condition.verificationStatus || \"Confirmed\"\n      }\n    ]\n  },\n  code: {\n    coding: [\n      {\n        system: \"http://hl7.org/fhir/sid/icd-10-cm\",\n        code: condition.code,\n        display: condition.display\n      }\n    ]\n  },\n  subject: {\n    reference: `Patient/${patientData.identifiers.internalId}`\n  },\n  encounter: {\n    reference: `Encounter/encounter-${integrationRequest.requestId}`\n  },\n  onsetDateTime: condition.onsetDateTime\n})) || [];\n\n// Create FHIR MedicationRequest Resources\nconst fhirMedicationRequests = clinicalData.medications?.map((medication, index) => ({\n  resourceType: \"MedicationRequest\",\n  id: `medication-${integrationRequest.requestId}-${index}`,\n  status: medication.status || \"active\",\n  intent: \"order\",\n  medicationCodeableConcept: {\n    coding: [\n      {\n        system: \"http://www.nlm.nih.gov/research/umls/rxnorm\",\n        code: medication.code,\n        display: medication.display\n      }\n    ]\n  },\n  subject: {\n    reference: `Patient/${patientData.identifiers.internalId}`\n  },\n  encounter: {\n    reference: `Encounter/encounter-${integrationRequest.requestId}`\n  },\n  authoredOn: integrationRequest.timestamp,\n  dosageInstruction: [\n    {\n      text: `${medication.dosage} ${medication.frequency}`,\n      timing: {\n        repeat: {\n          frequency: 1,\n          period: 1,\n          periodUnit: \"d\"\n        }\n      }\n    }\n  ]\n})) || [];\n\n// Create FHIR AllergyIntolerance Resources\nconst fhirAllergies = clinicalData.allergies?.map((allergy, index) => ({\n  resourceType: \"AllergyIntolerance\",\n  id: `allergy-${integrationRequest.requestId}-${index}`,\n  clinicalStatus: {\n    coding: [\n      {\n        system: \"http://terminology.hl7.org/CodeSystem/allergyintolerance-clinical\",\n        code: \"active\",\n        display: \"Active\"\n      }\n    ]\n  },\n  verificationStatus: {\n    coding: [\n      {\n        system: \"http://terminology.hl7.org/CodeSystem/allergyintolerance-verification\",\n        code: \"confirmed\",\n        display: \"Confirmed\"\n      }\n    ]\n  },\n  type: allergy.type || \"allergy\",\n  criticality: allergy.criticality || \"low\",\n  code: {\n    coding: [\n      {\n        system: \"http://snomed.info/sct\",\n        code: allergy.code,\n        display: allergy.display\n      }\n    ]\n  },\n  patient: {\n    reference: `Patient/${patientData.identifiers.internalId}`\n  }\n})) || [];\n\nreturn {\n  ...integrationRequest,\n  fhirBundle: {\n    resourceType: \"Bundle\",\n    id: `health-assistant-sync-${integrationRequest.requestId}`,\n    type: \"transaction\",\n    timestamp: new Date().toISOString(),\n    entry: [\n      { resource: fhirPatient, request: { method: \"PUT\", url: `Patient/${fhirPatient.id}` } },\n      { resource: fhirEncounter, request: { method: \"POST\", url: \"Encounter\" } },\n      ...fhirObservations.map(obs => ({ resource: obs, request: { method: \"POST\", url: \"Observation\" } })),\n      ...fhirConditions.map(cond => ({ resource: cond, request: { method: \"POST\", url: \"Condition\" } })),\n      ...fhirMedicationRequests.map(med => ({ resource: med, request: { method: \"POST\", url: \"MedicationRequest\" } })),\n      ...fhirAllergies.map(allergy => ({ resource: allergy, request: { method: \"POST\", url: \"AllergyIntolerance\" } }))\n    ]\n  },\n  integrationTimestamp: new Date().toISOString()\n};"
      },
      "id": "patient-data-sync",
      "name": "Patient Data Sync Processing",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 180]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://{{ $json.providerDetails.ehrSystemType }}-auth.healthsystem.com/oauth2/token",
        "authentication": "genericCredentialType",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "grant_type",
              "value": "client_credentials"
            },
            {
              "name": "client_id",
              "value": "={{ $credentials.ehrIntegration.clientId }}"
            },
            {
              "name": "client_secret",
              "value": "={{ $credentials.ehrIntegration.clientSecret }}"
            },
            {
              "name": "scope",
              "value": "patient/*.read patient/*.write"
            }
          ]
        }
      },
      "id": "provider-authentication",
      "name": "Provider Authentication & Authorization",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [900, 180],
      "credentials": {
        "genericCredentialType": {
          "id": "ehr-integration-auth",
          "name": "EHR Integration Auth"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.providerDetails.fhirEndpoint }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/fhir+json"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $json.access_token }}"
            },
            {
              "name": "Accept",
              "value": "application/fhir+json"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "={{ JSON.stringify($json.fhirBundle) }}"
      },
      "id": "ehr-api-connection",
      "name": "EHR System API Connection",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1120, 180]
    },
    {
      "parameters": {
        "jsCode": "const integrationRequest = $json;\nconst communicationRequest = integrationRequest.communicationRequest;\n\nif (integrationRequest.requestType === 'provider_notification' && communicationRequest) {\n  const fhirCommunication = {\n    resourceType: \"Communication\",\n    id: `communication-${integrationRequest.requestId}`,\n    status: \"completed\",\n    category: [\n      {\n        coding: [\n          {\n            system: \"http://terminology.hl7.org/CodeSystem/communication-category\",\n            code: communicationRequest.categoryCode || \"notification\",\n            display: \"Notification\"\n          }\n        ]\n      }\n    ],\n    priority: integrationRequest.priority || \"routine\",\n    subject: {\n      reference: `Patient/${integrationRequest.patientData.identifiers.internalId}`\n    },\n    recipient: [\n      {\n        reference: `Practitioner/${integrationRequest.providerDetails.practitionerId}`\n      }\n    ],\n    sender: {\n      reference: \"Organization/health-assistant\"\n    },\n    sent: new Date().toISOString(),\n    payload: [\n      {\n        contentString: communicationRequest.message\n      },\n      {\n        contentString: `Subject: ${communicationRequest.subject}`\n      }\n    ],\n    note: [\n      {\n        text: `Generated by Personal Health Assistant for patient assessment`,\n        time: new Date().toISOString()\n      }\n    ]\n  };\n\n  return {\n    ...integrationRequest,\n    fhirCommunication,\n    communicationCreated: true\n  };\n}\n\nreturn {\n  ...integrationRequest,\n  communicationCreated: false\n};"
      },
      "id": "communication-resource",
      "name": "Communication Resource Creation",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.providerDetails.fhirEndpoint }}/Appointment",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/fhir+json"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $json.access_token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "{\n  \"resourceType\": \"Appointment\",\n  \"id\": \"appointment-{{ $json.requestId }}\",\n  \"status\": \"proposed\",\n  \"serviceType\": [\n    {\n      \"coding\": [\n        {\n          \"system\": \"http://terminology.hl7.org/CodeSystem/service-type\",\n          \"code\": \"{{ $json.appointmentRequest.serviceType }}\",\n          \"display\": \"{{ $json.appointmentRequest.serviceType }}\"\n        }\n      ]\n    }\n  ],\n  \"specialty\": [\n    {\n      \"coding\": [\n        {\n          \"system\": \"http://snomed.info/sct\",\n          \"code\": \"394802001\",\n          \"display\": \"General medicine\"\n        }\n      ]\n    }\n  ],\n  \"appointmentType\": {\n    \"coding\": [\n      {\n        \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0276\",\n        \"code\": \"ROUTINE\",\n        \"display\": \"Routine appointment\"\n      }\n    ]\n  },\n  \"reasonCode\": [\n    {\n      \"text\": \"{{ $json.clinicalData.currentAssessment.chiefComplaint }}\"\n    }\n  ],\n  \"priority\": {{ $json.priority === 'urgent' ? 1 : 5 }},\n  \"minutesDuration\": {{ $json.appointmentRequest.duration || 30 }},\n  \"participant\": [\n    {\n      \"actor\": {\n        \"reference\": \"Patient/{{ $json.patientData.identifiers.internalId }}\"\n      },\n      \"required\": \"required\",\n      \"status\": \"needs-action\"\n    },\n    {\n      \"actor\": {\n        \"reference\": \"Practitioner/{{ $json.providerDetails.practitionerId }}\"\n      },\n      \"required\": \"required\",\n      \"status\": \"needs-action\"\n    }\n  ],\n  \"requestedPeriod\": [\n    {\n      \"start\": \"{{ $json.appointmentRequest.preferredTimeframe }}\"\n    }\n  ]\n}"
      },
      "id": "appointment-request",
      "name": "Appointment Request Processing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,\n      "position": [680, 420]
    },
    {
      "parameters": {
        "jsCode": "const integrationRequest = $json;\nconst fhirResponse = $json.response || {};\n\nconst validation = {\n  success: false,\n  fhirValidation: {\n    bundleProcessed: false,\n    resourcesCreated: 0,\n    resourcesUpdated: 0,\n    errors: [],\n    warnings: []\n  },\n  providerIntegration: {\n    system: integrationRequest.providerDetails.ehrSystemType,\n    endpoint: integrationRequest.providerDetails.fhirEndpoint,\n    responseTime: 0,\n    status: 'unknown'\n  },\n  dataMapping: {\n    patientMapped: false,\n    conditionsMapped: 0,\n    medicationsMapped: 0,\n    allergiesMapped: 0\n  }\n};\n\n// Validate FHIR response structure\nif (fhirResponse.resourceType === 'Bundle') {\n  validation.fhirValidation.bundleProcessed = true;\n  \n  if (fhirResponse.entry && Array.isArray(fhirResponse.entry)) {\n    fhirResponse.entry.forEach(entry => {\n      if (entry.response) {\n        if (entry.response.status && entry.response.status.startsWith('2')) {\n          if (entry.response.status.includes('201')) {\n            validation.fhirValidation.resourcesCreated++;\n          } else if (entry.response.status.includes('200')) {\n            validation.fhirValidation.resourcesUpdated++;\n          }\n        } else {\n          validation.fhirValidation.errors.push({\n            resource: entry.resource?.resourceType || 'unknown',\n            status: entry.response.status,\n            details: entry.response.outcome\n          });\n        }\n      }\n    });\n  }\n} else if (fhirResponse.resourceType === 'OperationOutcome') {\n  // Handle operation outcome\n  if (fhirResponse.issue) {\n    fhirResponse.issue.forEach(issue => {\n      if (issue.severity === 'error' || issue.severity === 'fatal') {\n        validation.fhirValidation.errors.push({\n          severity: issue.severity,\n          code: issue.code,\n          details: issue.details?.text || issue.diagnostics\n        });\n      } else {\n        validation.fhirValidation.warnings.push({\n          severity: issue.severity,\n          code: issue.code,\n          details: issue.details?.text || issue.diagnostics\n        });\n      }\n    });\n  }\n}\n\n// Determine overall success\nif (validation.fhirValidation.bundleProcessed && \n    validation.fhirValidation.errors.length === 0 &&\n    (validation.fhirValidation.resourcesCreated > 0 || validation.fhirValidation.resourcesUpdated > 0)) {\n  validation.success = true;\n  validation.providerIntegration.status = 'success';\n} else if (validation.fhirValidation.errors.length > 0) {\n  validation.providerIntegration.status = 'error';\n} else {\n  validation.providerIntegration.status = 'partial';\n}\n\n// Map data processing results\nconst originalBundle = integrationRequest.fhirBundle;\nif (originalBundle && originalBundle.entry) {\n  originalBundle.entry.forEach(entry => {\n    switch (entry.resource.resourceType) {\n      case 'Patient':\n        validation.dataMapping.patientMapped = true;\n        break;\n      case 'Condition':\n        validation.dataMapping.conditionsMapped++;\n        break;\n      case 'MedicationRequest':\n        validation.dataMapping.medicationsMapped++;\n        break;\n      case 'AllergyIntolerance':\n        validation.dataMapping.allergiesMapped++;\n        break;\n    }\n  });\n}\n\n// Generate integration summary\nconst integrationSummary = {\n  requestId: integrationRequest.requestId,\n  patientId: integrationRequest.patientId,\n  requestType: integrationRequest.requestType,\n  providerSystem: integrationRequest.providerDetails.ehrSystemType,\n  processingResult: validation.success ? 'SUCCESS' : 'FAILED',\n  resourcesSynchronized: validation.fhirValidation.resourcesCreated + validation.fhirValidation.resourcesUpdated,\n  errorsEncountered: validation.fhirValidation.errors.length,\n  warningsGenerated: validation.fhirValidation.warnings.length,\n  completedAt: new Date().toISOString()\n};\n\nreturn {\n  ...integrationRequest,\n  validation,\n  integrationSummary,\n  fhirResponse,\n  processingComplete: true\n};"
      },
      "id": "response-processing",
      "name": "Response Processing & Validation",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "server": "memory",
        "tool": "create_entities",
        "toolInput": {
          "entities": [
            {
              "name": "{{ $json.patientId }}_provider_integration_{{ $json.requestId }}",
              "entityType": "provider_integration",
              "observations": [
                "Request ID: {{ $json.requestId }}",
                "Request type: {{ $json.requestType }}",
                "Provider system: {{ $json.providerDetails.ehrSystemType }}",
                "Integration status: {{ $json.integrationSummary.processingResult }}",
                "Resources synchronized: {{ $json.integrationSummary.resourcesSynchronized }}",
                "Errors encountered: {{ $json.integrationSummary.errorsEncountered }}",
                "FHIR endpoint: {{ $json.providerDetails.fhirEndpoint }}",
                "Completed at: {{ $json.integrationSummary.completedAt }}",
                "Patient mapped: {{ $json.validation.dataMapping.patientMapped }}",
                "Conditions mapped: {{ $json.validation.dataMapping.conditionsMapped }}"
              ]
            }
          ]
        }
      },
      "id": "integration-logging",
      "name": "Memory MCP - Integration Logging",
      "type": "n8n-nodes-langchain.toolMcp",
      "typeVersion": 1,
      "position": [1560, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": {{ $json.validation.success }},\n  \"requestId\": \"{{ $json.requestId }}\",\n  \"patientId\": \"{{ $json.patientId }}\",\n  \"integrationCompleted\": true,\n  \n  \"providerIntegration\": {\n    \"system\": \"{{ $json.providerDetails.ehrSystemType }}\",\n    \"status\": \"{{ $json.validation.providerIntegration.status }}\",\n    \"endpoint\": \"{{ $json.providerDetails.fhirEndpoint }}\",\n    \"apiVersion\": \"{{ $json.providerDetails.apiVersion }}\"\n  },\n  \n  \"dataSync\": {\n    \"fhirBundleProcessed\": {{ $json.validation.fhirValidation.bundleProcessed }},\n    \"resourcesCreated\": {{ $json.validation.fhirValidation.resourcesCreated }},\n    \"resourcesUpdated\": {{ $json.validation.fhirValidation.resourcesUpdated }},\n    \"patientMapped\": {{ $json.validation.dataMapping.patientMapped }},\n    \"conditionsMapped\": {{ $json.validation.dataMapping.conditionsMapped }},\n    \"medicationsMapped\": {{ $json.validation.dataMapping.medicationsMapped }},\n    \"allergiesMapped\": {{ $json.validation.dataMapping.allergiesMapped }}\n  },\n  \n  \"communicationResults\": {\n    \"communicationCreated\": {{ $json.communicationCreated || false }},\n    \"appointmentRequested\": {{ $json.requestType === 'appointment_request' }}\n  },\n  \n  \"integrationSummary\": {{ JSON.stringify($json.integrationSummary) }},\n  \n  \"errors\": {{ JSON.stringify($json.validation.fhirValidation.errors) }},\n  \"warnings\": {{ JSON.stringify($json.validation.fhirValidation.warnings) }},\n  \n  \"metadata\": {\n    \"processingTime\": \"calculated_in_seconds\",\n    \"fhirVersion\": \"R4\",\n    \"integrationTimestamp\": \"{{ $json.integrationTimestamp }}\",\n    \"completedAt\": \"{{ $json.integrationSummary.completedAt }}\"\n  }\n}",
        "responseCode": 200
      },
      "id": "provider-response",
      "name": "Provider Response & Status Update",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [1780, 300]
    }
  ],
  "connections": {
    "FHIR Integration Webhook": {
      "main": [
        [
          {
            "node": "Request Type Classification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Type Classification": {
      "main": [
        [
          {
            "node": "Patient Data Sync Processing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Communication Resource Creation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Appointment Request Processing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Patient Data Sync Processing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Patient Data Sync Processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Patient Data Sync Processing": {
      "main": [
        [
          {
            "node": "Provider Authentication & Authorization",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Provider Authentication & Authorization": {
      "main": [
        [
          {
            "node": "EHR System API Connection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EHR System API Connection": {
      "main": [
        [
          {
            "node": "Response Processing & Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Communication Resource Creation": {
      "main": [
        [
          {
            "node": "Provider Authentication & Authorization",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Appointment Request Processing": {
      "main": [
        [
          {
            "node": "Response Processing & Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response Processing & Validation": {
      "main": [
        [
          {
            "node": "Memory MCP - Integration Logging",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Memory MCP - Integration Logging": {
      "main": [
        [
          {
            "node": "Provider Response & Status Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "error-handling-workflow"
  },
  "staticData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "healthcare-assistant-production"
  },
  "pinData": {},
  "versionId": "provider-integration-v1.0.0"
}