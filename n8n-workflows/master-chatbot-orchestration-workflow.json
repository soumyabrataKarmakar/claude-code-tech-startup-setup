{
  "name": "Master Chatbot Orchestration Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatbot",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-entry",
      "name": "Webhook Entry Point",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [180, 300],
      "webhookId": "master-chatbot-entry"
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://api.anthropic.com/v1/messages",
        "options": {
          "headers": {
            "anthropic-version": "2023-06-01",
            "content-type": "application/json"
          },
          "timeout": 30000
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "model",
              "value": "claude-3-5-sonnet-20241022"
            },
            {
              "name": "max_tokens",
              "value": "1000"
            },
            {
              "name": "system",
              "value": "You are a medical triage AI assistant. Analyze user input and classify the intent into one of these categories: EMERGENCY, INTAKE, CLINICAL_ASSESSMENT, CONTEXT_REQUEST, PROVIDER_INTEGRATION, GENERAL_HEALTH, MULTI_MODAL. Also assess urgency level (LOW, MEDIUM, HIGH, CRITICAL). Respond with JSON format: {\"intent\": \"category\", \"urgency\": \"level\", \"confidence\": 0.95, \"reasoning\": \"brief explanation\", \"requires_human_oversight\": boolean, \"emergency_indicators\": [\"list if any\"]}"
            },
            {
              "name": "messages",
              "value": "=[{\"role\": \"user\", \"content\": $json.body.message}]"
            }
          ]
        }
      },
      "id": "claude-intent-classifier",
      "name": "Claude Intent Classifier",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [380, 300],
      "credentials": {
        "httpHeaderAuth": {
          "id": "anthropic-api-key",
          "name": "Anthropic API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "emergency-condition",
              "leftValue": "={{ JSON.parse($json.body.content[0].text).intent }}",
              "rightValue": "EMERGENCY",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "emergency-router",
      "name": "Emergency Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [580, 200]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $env.N8N_WEBHOOK_BASE_URL || 'http://localhost:5678' }}/webhook/emergency-escalation",
        "options": {
          "timeout": 10000,
          "retry": {
            "enabled": true,
            "maxRetries": 2,
            "retryInterval": 1000
          }
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "patient_id",
              "value": "={{ $('webhook-entry').item.json.body.patient_id }}"
            },
            {
              "name": "message",
              "value": "={{ $('webhook-entry').item.json.body.message }}"
            },
            {
              "name": "urgency",
              "value": "={{ JSON.parse($('claude-intent-classifier').item.json.body.content[0].text).urgency }}"
            },
            {
              "name": "emergency_indicators",
              "value": "={{ JSON.parse($('claude-intent-classifier').item.json.body.content[0].text).emergency_indicators }}"
            },
            {
              "name": "source",
              "value": "master-chatbot"
            }
          ]
        }
      },
      "id": "emergency-escalation-trigger",
      "name": "Emergency Escalation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [780, 100]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "intake-condition",
              "leftValue": "={{ JSON.parse($json.body.content[0].text).intent }}",
              "rightValue": "INTAKE",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "intake-router",
      "name": "Intake Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [580, 350]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $env.N8N_WEBHOOK_BASE_URL || 'http://localhost:5678' }}/webhook/patient-intake",
        "options": {
          "timeout": 120000,
          "retry": {
            "enabled": true,
            "maxRetries": 2,
            "retryInterval": 2000
          }
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "patient_id",
              "value": "={{ $('webhook-entry').item.json.body.patient_id }}"
            },
            {
              "name": "message",
              "value": "={{ $('webhook-entry').item.json.body.message }}"
            },
            {
              "name": "session_id",
              "value": "={{ $('webhook-entry').item.json.body.session_id }}"
            },
            {
              "name": "intake_type",
              "value": "chatbot_initiated"
            },
            {
              "name": "initial_assessment",
              "value": "={{ JSON.parse($('claude-intent-classifier').item.json.body.content[0].text) }}"
            }
          ]
        }
      },
      "id": "patient-intake-trigger",
      "name": "Patient Intake",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [780, 350]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "clinical-condition",
              "leftValue": "={{ JSON.parse($json.body.content[0].text).intent }}",
              "rightValue": "CLINICAL_ASSESSMENT",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "clinical-router",
      "name": "Clinical Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [580, 500]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $env.N8N_WEBHOOK_BASE_URL || 'http://localhost:5678' }}/webhook/clinical-decision-support",
        "options": {
          "timeout": 180000,
          "retry": {
            "enabled": true,
            "maxRetries": 1,
            "retryInterval": 3000
          }
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "patient_id",
              "value": "={{ $('webhook-entry').item.json.body.patient_id }}"
            },
            {
              "name": "clinical_query",
              "value": "={{ $('webhook-entry').item.json.body.message }}"
            },
            {
              "name": "session_id",
              "value": "={{ $('webhook-entry').item.json.body.session_id }}"
            },
            {
              "name": "urgency_level",
              "value": "={{ JSON.parse($('claude-intent-classifier').item.json.body.content[0].text).urgency }}"
            },
            {
              "name": "requires_oversight",
              "value": "={{ JSON.parse($('claude-intent-classifier').item.json.body.content[0].text).requires_human_oversight }}"
            }
          ]
        }
      },
      "id": "clinical-decision-trigger",
      "name": "Clinical Decision Support",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [780, 500]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "context-condition",
              "leftValue": "={{ JSON.parse($json.body.content[0].text).intent }}",
              "rightValue": "CONTEXT_REQUEST",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "context-router",
      "name": "Context Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [580, 650]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $env.N8N_WEBHOOK_BASE_URL || 'http://localhost:5678' }}/webhook/patient-context",
        "options": {
          "timeout": 60000
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "patient_id",
              "value": "={{ $('webhook-entry').item.json.body.patient_id }}"
            },
            {
              "name": "context_request",
              "value": "={{ $('webhook-entry').item.json.body.message }}"
            },
            {
              "name": "session_id",
              "value": "={{ $('webhook-entry').item.json.body.session_id }}"
            },
            {
              "name": "request_type",
              "value": "chatbot_query"
            }
          ]
        }
      },
      "id": "patient-context-trigger",
      "name": "Patient Context Management",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [780, 650]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "provider-condition",
              "leftValue": "={{ JSON.parse($json.body.content[0].text).intent }}",
              "rightValue": "PROVIDER_INTEGRATION",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "provider-router",
      "name": "Provider Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [580, 800]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $env.N8N_WEBHOOK_BASE_URL || 'http://localhost:5678' }}/webhook/provider-integration",
        "options": {
          "timeout": 300000,
          "retry": {
            "enabled": true,
            "maxRetries": 1,
            "retryInterval": 5000
          }
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "patient_id",
              "value": "={{ $('webhook-entry').item.json.body.patient_id }}"
            },
            {
              "name": "integration_request",
              "value": "={{ $('webhook-entry').item.json.body.message }}"
            },
            {
              "name": "session_id",
              "value": "={{ $('webhook-entry').item.json.body.session_id }}"
            },
            {
              "name": "provider_context",
              "value": "={{ $('webhook-entry').item.json.body.provider_id || null }}"
            }
          ]
        }
      },
      "id": "provider-integration-trigger",
      "name": "Provider Integration",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [780, 800]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "multimodal-condition",
              "leftValue": "={{ JSON.parse($json.body.content[0].text).intent }}",
              "rightValue": "MULTI_MODAL",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "multimodal-router",
      "name": "Multi-Modal Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [580, 950]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $env.N8N_WEBHOOK_BASE_URL || 'http://localhost:5678' }}/webhook/multi-modal-interface",
        "options": {
          "timeout": 120000,
          "retry": {
            "enabled": true,
            "maxRetries": 2,
            "retryInterval": 2000
          }
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "patient_id",
              "value": "={{ $('webhook-entry').item.json.body.patient_id }}"
            },
            {
              "name": "input_data",
              "value": "={{ $('webhook-entry').item.json.body }}"
            },
            {
              "name": "modality",
              "value": "={{ $('webhook-entry').item.json.body.input_type || 'text' }}"
            },
            {
              "name": "accessibility_needs",
              "value": "={{ $('webhook-entry').item.json.body.accessibility_preferences || null }}"
            }
          ]
        }
      },
      "id": "multimodal-interface-trigger",
      "name": "Multi-Modal Interface",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [780, 950]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "general-health-condition",
              "leftValue": "={{ JSON.parse($json.body.content[0].text).intent }}",
              "rightValue": "GENERAL_HEALTH",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "general-health-router",
      "name": "General Health Router", 
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [580, 1100]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://api.anthropic.com/v1/messages",
        "options": {
          "headers": {
            "anthropic-version": "2023-06-01",
            "content-type": "application/json"
          },
          "timeout": 30000
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "model",
              "value": "claude-3-5-sonnet-20241022"
            },
            {
              "name": "max_tokens",
              "value": "2000"
            },
            {
              "name": "system",
              "value": "You are a helpful medical assistant. Provide general health information and guidance. Be empathetic and encouraging. Always recommend consulting healthcare professionals for specific medical advice. If the query seems urgent or concerning, suggest appropriate medical attention."
            },
            {
              "name": "messages",
              "value": "=[{\"role\": \"user\", \"content\": $('webhook-entry').item.json.body.message}]"
            }
          ]
        }
      },
      "id": "general-health-claude",
      "name": "General Health Assistant",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [780, 1100],
      "credentials": {
        "httpHeaderAuth": {
          "id": "anthropic-api-key",
          "name": "Anthropic API Key"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Memory MCP Integration for Conversation State\nconst memoryData = {\n  patient_id: $input.first().json.body.patient_id,\n  session_id: $input.first().json.body.session_id,\n  timestamp: new Date().toISOString(),\n  conversation_turn: $input.first().json.body.turn_number || 1,\n  user_message: $input.first().json.body.message,\n  intent_classification: null,\n  workflow_response: null,\n  response_generated: null,\n  context_updated: false\n};\n\n// Store the initial conversation state\nreturn { json: memoryData };"
      },
      "id": "conversation-state-init",
      "name": "Initialize Conversation State",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [380, 150]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $env.MEMORY_MCP_ENDPOINT || 'http://localhost:5678/webhook/memory-mcp' }}",
        "options": {
          "timeout": 30000
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "action",
              "value": "create_entities"
            },
            {
              "name": "entities",
              "value": "=[{\n  \"name\": \"conversation_\" + $('webhook-entry').item.json.body.session_id,\n  \"entityType\": \"conversation\",\n  \"observations\": [\n    \"Patient ID: \" + $('webhook-entry').item.json.body.patient_id,\n    \"Session started: \" + new Date().toISOString(),\n    \"Initial message: \" + $('webhook-entry').item.json.body.message\n  ]\n}]"
            }
          ]
        }
      },
      "id": "memory-conversation-init",
      "name": "Initialize Memory Context",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [580, 50]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "oversight-condition",
              "leftValue": "={{ JSON.parse($('claude-intent-classifier').item.json.body.content[0].text).requires_human_oversight }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "oversight-router",
      "name": "Human Oversight Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [980, 300]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $env.N8N_WEBHOOK_BASE_URL || 'http://localhost:5678' }}/webhook/dual-oversight-integration",
        "options": {
          "timeout": 300000
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "patient_id",
              "value": "={{ $('webhook-entry').item.json.body.patient_id }}"
            },
            {
              "name": "oversight_request",
              "value": "={{ {\n  \"original_query\": $('webhook-entry').item.json.body.message,\n  \"intent_analysis\": JSON.parse($('claude-intent-classifier').item.json.body.content[0].text),\n  \"workflow_response\": $json,\n  \"reason_for_oversight\": \"AI classified as requiring human review\"\n} }}"
            },
            {
              "name": "session_id",
              "value": "={{ $('webhook-entry').item.json.body.session_id }}"
            },
            {
              "name": "urgency_level",
              "value": "={{ JSON.parse($('claude-intent-classifier').item.json.body.content[0].text).urgency }}"
            }
          ]
        }
      },
      "id": "dual-oversight-trigger",
      "name": "Dual Oversight Integration",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1180, 200]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://api.anthropic.com/v1/messages",
        "options": {
          "headers": {
            "anthropic-version": "2023-06-01",
            "content-type": "application/json"
          },
          "timeout": 45000
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "model",
              "value": "claude-3-5-sonnet-20241022"
            },
            {
              "name": "max_tokens",
              "value": "3000"
            },
            {
              "name": "system",
              "value": "You are a medical response synthesizer. Take the workflow response and create a comprehensive, empathetic, and actionable response for the patient. Maintain professional medical tone while being accessible. Include next steps, safety information, and when to seek immediate care if relevant."
            },
            {
              "name": "messages",
              "value": "=[{\n  \"role\": \"user\",\n  \"content\": \"Original patient query: \" + $('webhook-entry').item.json.body.message + \"\\n\\nWorkflow response: \" + JSON.stringify($json) + \"\\n\\nPlease synthesize this into a clear, helpful response for the patient.\"\n}]"
            }
          ]
        }
      },
      "id": "response-synthesizer",
      "name": "Response Synthesizer",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1180, 600],
      "credentials": {
        "httpHeaderAuth": {
          "id": "anthropic-api-key",
          "name": "Anthropic API Key"
        }
      }
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $env.MEMORY_MCP_ENDPOINT || 'http://localhost:5678/webhook/memory-mcp' }}",
        "options": {
          "timeout": 30000
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "action",
              "value": "add_observations"
            },
            {
              "name": "observations",
              "value": "=[{\n  \"entityName\": \"conversation_\" + $('webhook-entry').item.json.body.session_id,\n  \"contents\": [\n    \"Response generated: \" + new Date().toISOString(),\n    \"Final response: \" + $json.body.content[0].text,\n    \"Workflow used: \" + ($('emergency-escalation-trigger').item?.json ? \"emergency\" : \n                      $('patient-intake-trigger').item?.json ? \"intake\" : \n                      $('clinical-decision-trigger').item?.json ? \"clinical\" : \n                      $('patient-context-trigger').item?.json ? \"context\" : \n                      $('provider-integration-trigger').item?.json ? \"provider\" : \n                      $('multimodal-interface-trigger').item?.json ? \"multimodal\" : \"general\")\n  ]\n}]"
            }
          ]
        }
      },
      "id": "memory-conversation-update",
      "name": "Update Memory Context",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1380, 600]
    },
    {
      "parameters": {
        "jsCode": "// HIPAA-compliant logging and audit trail\nconst crypto = require('crypto');\nconst originalInput = $('webhook-entry').item.json;\nconst intentData = $('claude-intent-classifier').item?.json?.body?.content?.[0]?.text;\n\n// Parse intent classification if available\nlet parsedIntent = {};\ntry {\n  parsedIntent = intentData ? JSON.parse(intentData) : {};\n} catch (e) {\n  parsedIntent = { intent: 'unknown', urgency: 'unknown' };\n}\n\n// Create HIPAA-compliant audit log\nconst auditLog = {\n  // Temporal data\n  timestamp: new Date().toISOString(),\n  audit_id: crypto.randomUUID(),\n  retention_until: new Date(Date.now() + (7 * 365 * 24 * 60 * 60 * 1000)).toISOString(), // 7 years\n  \n  // Session tracking (no PHI)\n  session_id_hash: crypto.createHash('sha256').update(originalInput.body?.session_id || 'unknown').digest('hex'),\n  patient_id_hash: crypto.createHash('sha256').update(originalInput.body?.patient_id || 'unknown').digest('hex'),\n  \n  // Workflow metadata\n  workflow_type: 'master-chatbot-orchestration',\n  intent_classified: parsedIntent.intent || 'unknown',\n  urgency_level: parsedIntent.urgency || 'unknown',\n  confidence_score: parsedIntent.confidence || 0,\n  human_oversight_required: parsedIntent.requires_human_oversight || false,\n  \n  // System data\n  response_generated: true,\n  processing_duration_ms: Date.now() - new Date(originalInput.timestamp || Date.now()).getTime(),\n  compliance_status: 'HIPAA_COMPLIANT',\n  access_method: 'api_chatbot_interface',\n  \n  // Security context (no sensitive data)\n  user_agent_hash: crypto.createHash('sha256').update(originalInput.headers?.['user-agent'] || '').digest('hex'),\n  ip_address_hash: crypto.createHash('sha256').update(originalInput.headers?.['x-forwarded-for'] || 'unknown').digest('hex'),\n  \n  // Data classification\n  data_sensitivity: 'PHI_PRESENT',\n  encryption_status: 'ENCRYPTED_IN_TRANSIT',\n  access_level: 'PATIENT_AUTHORIZED'\n};\n\n// Enhanced logging for compliance monitoring\nconsole.log('HIPAA_AUDIT_LOG:', JSON.stringify({\n  audit_id: auditLog.audit_id,\n  timestamp: auditLog.timestamp,\n  event_type: 'CHATBOT_INTERACTION',\n  compliance_status: auditLog.compliance_status,\n  retention_policy: 'SEVEN_YEAR_RETENTION',\n  data_classification: 'PHI_PROCESSED'\n}));\n\n// Store in secure audit database (placeholder for actual implementation)\n// This would typically go to a HIPAA-compliant audit log service\nconsole.log('AUDIT_STORAGE_REQUIRED:', JSON.stringify(auditLog));\n\nreturn { json: auditLog };"
      },
      "id": "hipaa-audit-logger",
      "name": "HIPAA Audit Logger",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1380, 800]
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              },
              {
                "name": "X-HIPAA-Compliant",
                "value": "true"
              }
            ]
          }
        }
      },
      "id": "webhook-response",
      "name": "Chatbot Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1580, 600]
    },
    {
      "parameters": {
        "jsCode": "// Error handling and fallback response\nconst errorResponse = {\n  status: 'error',\n  message: 'I apologize, but I\\'m experiencing technical difficulties. For immediate medical concerns, please contact your healthcare provider or call emergency services if this is urgent.',\n  timestamp: new Date().toISOString(),\n  session_id: $input.first().json.body?.session_id,\n  fallback: true,\n  recommended_action: 'contact_provider'\n};\n\n// Log the error for monitoring\nconsole.error('CHATBOT_ERROR:', JSON.stringify({\n  timestamp: new Date().toISOString(),\n  error_context: $input.first().json,\n  session_id: $input.first().json.body?.session_id\n}));\n\nreturn { json: errorResponse };"
      },
      "id": "error-handler",
      "name": "Error Handler & Fallback",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1380, 1000]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "authentication-check",
              "leftValue": "={{ $('webhook-entry').item.json.headers.authorization }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "patient-id-check", 
              "leftValue": "={{ $('webhook-entry').item.json.body.patient_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "session-id-check",
              "leftValue": "={{ $('webhook-entry').item.json.body.session_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "message-check",
              "leftValue": "={{ $('webhook-entry').item.json.body.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "authentication-validator",
      "name": "Authentication Validator",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [180, 150]
    }
  ],
  "connections": {
    "webhook-entry": {
      "main": [
        [
          {
            "node": "authentication-validator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "authentication-validator": {
      "main": [
        [
          {
            "node": "conversation-state-init",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "error-handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "conversation-state-init": {
      "main": [
        [
          {
            "node": "memory-conversation-init",
            "type": "main",
            "index": 0
          },
          {
            "node": "claude-intent-classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "claude-intent-classifier": {
      "main": [
        [
          {
            "node": "emergency-router",
            "type": "main",
            "index": 0
          },
          {
            "node": "intake-router",
            "type": "main",
            "index": 0
          },
          {
            "node": "clinical-router",
            "type": "main",
            "index": 0
          },
          {
            "node": "context-router",
            "type": "main",
            "index": 0
          },
          {
            "node": "provider-router",
            "type": "main",
            "index": 0
          },
          {
            "node": "multimodal-router",
            "type": "main",
            "index": 0
          },
          {
            "node": "general-health-router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "emergency-router": {
      "main": [
        [
          {
            "node": "emergency-escalation-trigger",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "intake-router": {
      "main": [
        [
          {
            "node": "patient-intake-trigger",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "clinical-router": {
      "main": [
        [
          {
            "node": "clinical-decision-trigger",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "context-router": {
      "main": [
        [
          {
            "node": "patient-context-trigger",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "provider-router": {
      "main": [
        [
          {
            "node": "provider-integration-trigger",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "multimodal-router": {
      "main": [
        [
          {
            "node": "multimodal-interface-trigger",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "emergency-escalation-trigger": {
      "main": [
        [
          {
            "node": "oversight-router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "patient-intake-trigger": {
      "main": [
        [
          {
            "node": "oversight-router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "clinical-decision-trigger": {
      "main": [
        [
          {
            "node": "oversight-router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "patient-context-trigger": {
      "main": [
        [
          {
            "node": "oversight-router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "provider-integration-trigger": {
      "main": [
        [
          {
            "node": "oversight-router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "multimodal-interface-trigger": {
      "main": [
        [
          {
            "node": "oversight-router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "general-health-router": {
      "main": [
        [
          {
            "node": "general-health-claude",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "general-health-claude": {
      "main": [
        [
          {
            "node": "oversight-router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "oversight-router": {
      "main": [
        [
          {
            "node": "dual-oversight-trigger",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "response-synthesizer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dual-oversight-trigger": {
      "main": [
        [
          {
            "node": "response-synthesizer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "response-synthesizer": {
      "main": [
        [
          {
            "node": "memory-conversation-update",
            "type": "main",
            "index": 0
          },
          {
            "node": "hipaa-audit-logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "memory-conversation-update": {
      "main": [
        [
          {
            "node": "webhook-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler": {
      "main": [
        [
          {
            "node": "webhook-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "master-chatbot-v1.0",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "master-chatbot-orchestration",
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "healthcare",
      "name": "healthcare"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z", 
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "ai-orchestration",
      "name": "ai-orchestration"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z", 
      "id": "hipaa-compliant",
      "name": "hipaa-compliant"
    }
  ]
}